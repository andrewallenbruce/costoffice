zip_db |> dplyr::distinct(county) |> print(n = 2008)
zip_db <- zip_code_db |>
dplyr::tibble() |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state,
county_pop = population,
county_popdens = population_density,
county_medhhinc = median_household_income,
lat,
lng,
dplyr::starts_with("bounds")) |>
dplyr::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
dplyr::left_join(zcta_crosswalk,
by = c("zip_code" = "ZCTA5")) |>
dplyr::left_join(state_db,
by = c("state" = "state_abb")) |>
dplyr::relocate(state_full,
region,
.after = state) |>
dplyr::mutate(county = stringr::str_remove_all(county, " County"))
zip_db |> dplyr::mutate(county == stringr::str_detect(county, " city"))
zip_db |> dplyr::filter(county == stringr::str_detect(county, " city"))
zip_db |> dplyr::filter(stringr::str_detect(county, " city"))
zip_db |> dplyr::filter(stringr::str_detect(county, " city")) |> dplyr::glimpse()
zip_db |> dplyr::filter(stringr::str_detect(county, " city")) |> dplyr::distinct(county)
zip_db |> dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |> dplyr::distinct(county)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |> dplyr::glimpse()
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(!is.na(county_pop)) |>
dplyr::glimpse()
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(!is.na(county_pop)) |>
dplyr::glimpse()
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(!is.na(county_pop)) |>
dplyr::glimpse()
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(!is.na(county_pop)) |>
dplyr::distinct(county)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(!is.na(county_pop)) |>
dplyr::distinct(county) |> print(n = 40)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop))
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(county)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(county) |> print(n = 40)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(city, county)
zip_db |>
dplyr::filter(stringr::str_detect(county, stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(county, state)
county_dupes <- zip_db |>
dplyr::filter(stringr::str_detect(county,
stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(county, state)
zip_db |> dplyr::anti_join(county_dupes, by = c("city" = "city", "county" = "county"))
zip_db
county_dupes
zip_db |> dplyr::anti_join(county_dupes, by = c("state" = "state", "county" = "county"))
zip_db <- zip_db |>
dplyr::anti_join(county_dupes,
by = c("state" = "state",
"county" = "county"))
zip_db
zip_db |> dplyr::glimpse()
zip_db |> dplyr::distinct()
zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct()
zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct() |>
dplyr::filter(!is.na(county_pop) & !is.na(county_popdens) &!is.na(county_medhhinc) &!is.na(lat) &!is.na(lng))
zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct() |>
dplyr::filter(!is.na(county_pop) &
!is.na(county_popdens) &
!is.na(county_medhhinc) &
!is.na(lat) &
!is.na(lng))
zip_db <- zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct() |>
dplyr::filter(!is.na(county_pop) &
!is.na(county_popdens) &
!is.na(county_medhhinc) &
!is.na(lat) &
!is.na(lng))
zip_db
gc()
usethis::use_data(zip_db, overwrite = TRUE)
devtools::load_all(".")
devtools::load_all(".")
datasets <- search_datasets()
datasets
datasets[1]
datasets[, 1]
datasets[1, ]
name <- datasets[1, ] |>
dplyr::select(specialty) |>
tibble::deframe()
set <- datasets[1, ] |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"),
)) |>
set <- datasets[1, ] |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(specialty,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
set <- datasets[1, ] |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
name
name <- datasets[1, ] |>
dplyr::select(specialty)
name
set |> dplyr::mutate(specialty = name, .before = dplyr::everything())
name <- datasets[1, ] |>
dplyr::select(specialty) |>
tibble::deframe()
set |> dplyr::mutate(specialty = name, .before = dplyr::everything())
set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
new <- set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
est <- set |>
dplyr::select(zip_code,
hcpcs = est_code,
dplyr::starts_with("est")) |>
tidyr::pivot_longer(dplyr::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
results <- dplyr::bind_rows(new, est) |>
dplyr::mutate(range = max - min) |>
dplyr::mutate(specialty = name, .before = dplyr::everything())
results
costoffice::zip_db
dplyr::left_join(costoffice::zip_db,
by = c("zip_code" = "zip_code"))
results |> dplyr::left_join(costoffice::zip_db,
by = c("zip_code" = "zip_code"))
gc()
## code to prepare `zip_db` dataset goes here
data("zcta_crosswalk", package = "zipcodeR")
data("zip_code_db", package = "zipcodeR")
state_db <- dplyr::tibble(
state_abb = state.abb,
state_full = state.name,
region = state.region)
dc_pr <- dplyr::tibble(
state_abb = c("PR", "DC"),
state_full = c("Puerto Rico", "District of Columbia"),
region = c("Southeast", "South"))
state_db <- dplyr::bind_rows(state_db, dc_pr)
zip_db <- zip_code_db |>
dplyr::tibble() |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state,
county_pop = population,
county_popdens = population_density,
county_medhhinc = median_household_income,
lat,
lng,
dplyr::starts_with("bounds")) |>
dplyr::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
dplyr::left_join(zcta_crosswalk,
by = c("zip_code" = "ZCTA5")) |>
dplyr::left_join(state_db,
by = c("state" = "state_abb")) |>
dplyr::relocate(state_full,
region,
.after = state) |>
dplyr::mutate(county = stringr::str_remove_all(county, " County"))
## Remove dupes that have NAs, full entries have lowercase "city"
county_dupes <- zip_db |>
dplyr::filter(stringr::str_detect(county,
stringr::fixed(" city", ignore_case = TRUE))) |>
dplyr::distinct(county, .keep_all = TRUE) |>
dplyr::filter(is.na(county_pop)) |>
dplyr::distinct(county, state)
zip_db <- zip_db |>
dplyr::anti_join(county_dupes,
by = c("state" = "state",
"county" = "county"))
zip_db
zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct()
zip_db <- zip_db |>
dplyr::select(-is_zcta, -TRACT, -GEOID) |>
dplyr::distinct()
usethis::use_data(zip_db, overwrite = TRUE)
results |> dplyr::left_join(costoffice::zip_db,
by = c("zip_code" = "zip_code"))
zip_db |> dplyr::filter(zip_code == "00210")
zip_db |> dplyr::filter(city == "Portsmouth")
zip_code_db |> dplyr::filter(city == "Portsmouth")
zip_code_db
zip_code_db |> dplyr::filter(major_city == "Portsmouth")
results <- dplyr::left_join(results, costoffice::zip_db,
by = c("zip_code" = "zip_code"))
results
name
gc()
name <- datasets[1, ] |>
dplyr::select(specialty) |>
tibble::deframe()
set <- datasets[1, ] |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
new <- set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
est <- set |>
dplyr::select(zip_code,
hcpcs = est_code,
dplyr::starts_with("est")) |>
tidyr::pivot_longer(dplyr::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
set <- dplyr::bind_rows(new, est) |>
dplyr::mutate(range = max - min) |>
dplyr::mutate(specialty = name, .before = dplyr::everything())
set <- dplyr::left_join(set, costoffice::zip_db,
by = c("zip_code" = "zip_code"))
readr::write_csv(set, file = stringr::str_glue("D:/cost_office_csvs/{name}.csv"))
readr::write_csv(set, file = stringr::str_glue("D:/cost_office_csvs/{name}.csv.gz"))
tringr::str_glue("D:/cost_office_csvs/{name}.csv.gz")
stringr::str_glue("D:/cost_office_csvs/{name}.csv.gz")
rd_trns_wrt_csv <- function(df) {
name <- df |>
dplyr::select(specialty) |>
tibble::deframe()
set <- df |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
new <- set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
est <- set |>
dplyr::select(zip_code,
hcpcs = est_code,
dplyr::starts_with("est")) |>
tidyr::pivot_longer(dplyr::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
set <- dplyr::bind_rows(new, est) |>
dplyr::mutate(range = max - min) |>
dplyr::mutate(specialty = name, .before = dplyr::everything())
set <- dplyr::left_join(set, costoffice::zip_db,
by = c("zip_code" = "zip_code"))
readr::write_csv(set, file = stringr::str_glue("D:/cost_office_csvs/{name}.csv.gz"))
}
datasets[1,]
datasets[2,]
datasets[2,] |> rd_trns_wrt_csv()
arr <- arrow::read_csv_arrow("D:/cost_office_csvs/addiction_medicine.csv.gz")
arr
arr <- arrow::read_csv_arrow("D:/cost_office_csvs/advanced_heart_failure_and_transplant_cardiology.csv.gz")
arr
gc()
devtools::load_all(".")
search_datasets() |>
purrr::walk(costoffice:::rd_trns_wrt_csv)
datasets <- search_datasets()
datasets |>
dplyr::select(specialty)
rd_trns_wrt_csv <- function(df) {
name <- datasets |>
dplyr::select(specialty)
set <- df |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
new <- set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
est <- set |>
dplyr::select(zip_code,
hcpcs = est_code,
dplyr::starts_with("est")) |>
tidyr::pivot_longer(dplyr::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
set <- dplyr::bind_rows(new, est) |>
dplyr::mutate(range = max - min) |>
dplyr::mutate(specialty = name$specialty, .before = dplyr::everything())
set <- dplyr::left_join(set, costoffice::zip_db,
by = c("zip_code" = "zip_code"))
readr::write_csv(set, file = stringr::str_glue("D:/cost_office_csvs/{name$specialty}.csv.gz"))
}
rd_trns_wrt_csv <- function(df) {
name <- df |>
dplyr::select(specialty)
set <- df |>
dplyr::pull(csv_url) |>
readr::read_csv(col_types = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character")) |>
dplyr::select(zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
new <- set |>
dplyr::select(zip_code,
hcpcs = new_code,
dplyr::starts_with("new")) |>
tidyr::pivot_longer(dplyr::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
est <- set |>
dplyr::select(zip_code,
hcpcs = est_code,
dplyr::starts_with("est")) |>
tidyr::pivot_longer(dplyr::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidyr::pivot_wider(names_from = stat, values_from = amount)
set <- dplyr::bind_rows(new, est) |>
dplyr::mutate(range = max - min) |>
dplyr::mutate(specialty = name$specialty, .before = dplyr::everything())
set <- dplyr::left_join(set, costoffice::zip_db,
by = c("zip_code" = "zip_code"))
readr::write_csv(set, file = stringr::str_glue("D:/cost_office_csvs/{name$specialty}.csv.gz"))
}
search_datasets() |>
purrr::walk(rd_trns_wrt_csv)
gc()
devtools::load_all(".")
search_datasets() |>
purrr::walk(rd_trns_wrt_csv)
datasets <- search_datasets()
datasets
purrr::walk(datasets, rd_trns_wrt_csv)
datasets$specialty[[1]]
devtools::load_all(".")
datasets[2, ]
datasets[2:3, ]
purrr::walk(datasets[2:3, ], costoffice:::rd_trns_wrt_csv)
