.by = c(specialty,
city,
state,
est_code)) |>
dplyr::arrange(state)
add |> dplyr::left_join(costoffice::zipcode_db) |>
dplyr::select(city,
county,
state,
zip_code,
dplyr::everything()) |>
dplyr::select(specialty,
city,
state,
dplyr::starts_with("est_")) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2),
.by = c(specialty,
city,
state,
est_code)) |>
dplyr::arrange(state)
add |> dplyr::left_join(costoffice::zipcode_db) |>
dplyr::select(city,
county,
state,
zip_code,
dplyr::everything()) |>
dplyr::select(specialty,
city,
state,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
city,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::arrange(state)
add |> dplyr::left_join(costoffice::zipcode_db) |>
dplyr::select(city,
county,
state,
zip_code,
dplyr::everything()) |>
dplyr::select(specialty,
city,
state,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
city,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::arrange(state) |>
dplyr::collect()
add |> dplyr::left_join(costoffice::zipcode_db) |>
dplyr::select(city,
county,
state,
zip_code,
dplyr::everything()) |>
dplyr::select(specialty,
city,
state,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::ungroup() |>
dplyr::collect()
add |> dplyr::left_join(costoffice::zipcode_db) |>
dplyr::select(city,
county,
state,
zip_code,
dplyr::everything()) |>
dplyr::select(specialty,
city,
state,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::ungroup() |>
dplyr::collect() |>
tidyr::drop_na()
devtools::load_all(".")
add <- search_datasets(specialty = "addiction medicine") |>
download_dataset_arrow() |>
use_zipcoder_arrow()
add
add |>
dplyr::select(specialty,
state,
est_code,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::filter(is.na(state)) |>
dplyr::ungroup() |>
dplyr::collect()
add |>
dplyr::select(specialty,
state,
est_code,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::filter(!is.na(state)) |>
dplyr::ungroup() |>
dplyr::collect()
add |>
dplyr::select(specialty,
state,
est_code,
dplyr::starts_with("est_")) |>
dplyr::group_by(specialty,
state,
est_code) |>
dplyr::summarise(avg_price_mode = round(mean(est_price_mode), 2),
avg_copay_mode = round(mean(est_copay_mode), 2)) |>
dplyr::filter(!is.na(state)) |>
dplyr::ungroup() |>
dplyr::collect() |>
dplyr::arrange(dplyr::desc(avg_copay_mode))
search_datasets()
search_datasets() |> dplyr::select(specialty, csv_url)
unique(airquality$Month)
airquality[airquality$Month==1,]
airquality[airquality$Month==5,]
months <- unique(airquality$Month)
td <- tempdir()
part_of_aq <- function(month) {
airquality[airquality$Month==5,]
}
aq_arrow <- purrrow:::marrow_ds(months, part_of_aq,
.path = td)
aq_arrow
aq_arrow |> dplyr::glimpse()
unlink(td)
months <- unique(airquality$Month)
td <- tempdir()
part_of_aq <- function(month) {
airquality[airquality$Month==5,]
}
aq_arrow <- purrrow:::marrow_ds(months, part_of_aq,
.path = td)
aq_arrow
unlink(file_path)
file_path <- tempfile()
unlink(file_path)
source("~/.active-rstudio-document", echo=TRUE)
devtools::load_all(".")
all <- search_datasets() |> dplyr::select(specialty, csv_url)
all
csvs <- all$csv_url
csvs
td <- tempdir()
all <- search_datasets() |> dplyr::select(specialty, csv_url)
marrow <- function(.x, .f, ..., .path, .partitioning = c("specialty"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:seq_along(.x), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
} else {
ft <- .f(x, ...)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
ds_arrow <- marrow(all, download_dataset_arrow, .path = td)
all[all$specialty]
devtools::load_all(".")
td <- tempdir()
all <- search_datasets_arrow() |> dplyr::select(specialty, csv_url)
all[all$specialty]
all
all["specialty"]
getElement(all, "specialty")
devtools::load_all(".")
td <- tempdir()
all <- search_datasets_arrow() |> dplyr::select(specialty, csv_url)
marrow <- function(.x, .f, ..., .path, .partitioning = c("specialty"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:seq_along(.x), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
} else {
ft <- .f(x, ...)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
ds_arrow <- marrow(all, download_dataset_arrow, .path = td)
all[[1]]
x[[1]][[1]]
all[[1]][[1]]
devtools::load_all(".")
devtools::load_all(".")
td <- tempdir()
all <- search_datasets_arrow() |> dplyr::select(specialty, csv_url)
ds_arrow <- marrow(all, download_dataset_arrow, .path = td)
devtools::load_all(".")
td <- tempdir()
all <- search_datasets_arrow() |> dplyr::select(specialty, csv_url)
marrow <- function(.x, .f, ..., .path, .partitioning = c("specialty"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
} else {
ft <- .f(x, ...)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
ds_arrow <- marrow(all, download_dataset_arrow, .path = td)
gc()
devtools::load_all(".")
td <- tempdir()
all <- search_datasets_arrow() |> dplyr::select(specialty, csv_url)
ds_arrow <- marrow(all, download_dataset_arrow, .path = td)
all
search_datasets_arrow(specialty = "addiction medicine") |>
dplyr::select(csv_url) |> tibble::deframe()
search_datasets_arrow() |>
dplyr::select(specialty) |>
tibble::deframe()
devtools::load_all(".")
td <- tempdir()
spec <- search_datasets_arrow() |>
dplyr::select(specialty) |>
tibble::deframe()
marrow <- function(.x, .f, ..., .path, .partitioning = c("specialty"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
ft |> dplyr::mutate(specialty = spec)
} else {
ft <- .f(x, ...)
ft |> dplyr::mutate(specialty = spec)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
ds_arrow <- marrow(spec, download_dataset_arrow, .path = td)
unique(airquality$Month)
spec
spec |> unlist()
spec |> as.vector()
search_datasets_arrow() |> unique(specialty)
search_datasets_arrow() |> unique(results$specialty)
search <- search_datasets_arrow()
unique(search$specialty)
search$specialty |> as.factor()
xs <- search$specialty |> as.factor()
xs
search_datasets_arrow() |>
dplyr::select(specialty) |>
tibble::deframe() |> as.list.factor()
specialty <- search_datasets_arrow() |>
dplyr::select(specialty) |>
tibble::deframe() |> as.list.factor()
ds_arrow <- marrow(specialty, download_dataset_arrow, .path = td)
tibble::enframe(month.name) |>
dplyr::select(-name) |>
dplyr::slice(1:7) |>
tibble::deframe()
month.name
tibble::enframe(specialty)
tibble::enframe(specialty) |>
dplyr::select(-name) |>
dplyr::slice(1:7) |>
tibble::deframe()
month.name
specialty
specialty <- search_datasets_arrow() |>
dplyr::select(specialty) |>
tibble::deframe()
specialty |> unlist()
specialty |> stringr::str_c()
specialty |> stringr::str_c(collapse = "")
specialty |> stringr::str_c(collapse = " ")
stringr::str_c('"', specialty, '"', collapse = " ")
stringr::str_c('\"', specialty, '\"', collapse = " ")
stringr::str_c(specialty, " ")
stringr::str_c(specialty, collapse = " ")
month.name
c(specialty)
specialty[[1]]
spec <- specialty[[1]]
ds_arrow <- marrow(spec, download_dataset_arrow, .path = td)
marrow <- function(.x, .f, ..., .path, .partitioning = c("specialty"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
#ft |> dplyr::mutate(specialty = spec)
} else {
ft <- .f(x, ...)
#ft |> dplyr::mutate(specialty = spec)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
marrow(spec, download_dataset_arrow, .path = td)
marrow <- function(.x, .f, ..., .path, .partitioning = c("spec"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
#ft |> dplyr::mutate(specialty = spec)
} else {
ft <- .f(x, ...)
#ft |> dplyr::mutate(specialty = spec)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
marrow(spec, download_dataset_arrow, .path = td)
marrow <- function(.x, .f, ..., .path,
.partitioning = c("spec"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
#ft |> dplyr::mutate(specialty = spec)
} else {
ft <- .f(x, ...)
#ft |> dplyr::mutate(specialty = spec)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
#partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
marrow <- function(.x, .f, ..., .path,
#.partitioning = c("spec"),
.format = "parquet", output) {
arrow_temp_dirs <- purrr::map_chr(1:length(.x[[1]]), ~tempfile())
purrr::walk2(.x = .x, .y = arrow_temp_dirs, .f = function(x, y, ...){
if(missing(...)) {
ft <- .f(x)
#ft |> dplyr::mutate(specialty = spec)
} else {
ft <- .f(x, ...)
#ft |> dplyr::mutate(specialty = spec)
}
if(nrow(ft) == 0) stop("Cannot handle zero-row results.")
arrow::write_dataset(ft, path = y, format = "parquet")
}, ...)
arrow_datasets <- purrr::map(arrow_temp_dirs,
arrow::open_dataset,
format = "parquet")
arrow_combined <- arrow::open_dataset(arrow_datasets)
arrow::write_dataset(arrow_combined,
path = .path,
#partitioning = .partitioning,
format = .format)
unlink(arrow_temp_dirs, recursive = T)
results <- arrow::open_dataset(.path)
return(results)
}
marrow(spec, download_dataset_arrow, .path = td)
ds_arrow <- marrow(spec, download_dataset_arrow, .path = td)
ds_arrow |> dplyr::glimpse()
devtools::load_all(".")
devtools::load_all(".")
add <- download_dataset_arrow(specialty = "addiction medicine")
add
devtools::load_all(".")
add <- download_dataset_arrow(specialty = "addiction medicine") |>
use_zipcoder_arrow()
add
search_datasets_arrow() |> dplyr::select(specialty)
spec <- search_datasets_arrow() |> dplyr::select(specialty)
purrr::map_dfr(spec, ~download_dataset_arrow(specialty = .x))
as.character(spec)
purrr::map_dfr(as.character(spec), ~download_dataset_arrow(specialty = .x))
arrow::read_ipc_stream(spec)
purrr::map_dfr(spec, ~download_dataset_arrow(specialty = .x))
as.list(spec)
purrr::map_dfr(as.list(spec), ~download_dataset_arrow(specialty = .x))
purrr::map_dfr(list(spec), ~download_dataset_arrow(specialty = .x))
list(spec)
list(spec[[1]]
list(spec[[1]])
list(spec)[[1]]
unlist(spec)
purrr::map_dfr(unlist(spec), ~download_dataset_arrow(specialty = .x))
purrr::map_dfr(unlist(spec, use.names = FALSE), ~download_dataset_arrow(specialty = .x))
purrr::map_dfr(unlist(spec, use.names = FALSE, recursive = FALSE), ~download_dataset_arrow(specialty = .x))
spec
adv <- download_dataset_arrow(specialty = "advanced heart failure and transplant cardiology") |>
use_zipcoder_arrow()
adv
dplyr::bind_rows(add, adv)
gc()
arrow::open_dataset(add, adv)
arrow::open_dataset(sources = c(add, adv))
arrow::open_dataset(sources = c("add", "adv"))
add <- download_dataset_arrow(specialty = "addiction medicine") |>
use_zipcoder_arrow() |>
dplyr::collect()
adv <- download_dataset_arrow(specialty = "advanced heart failure and transplant cardiology") |>
use_zipcoder_arrow() |>
dplyr::collect()
arrow::open_dataset(sources = c("add", "adv"))
add
adv
