state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demo = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income),
geocode = c(lat, lng, tidytable::starts_with("bounds"))) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, tidytable::starts_with("bounds"))) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
#tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
gc()
zip_db <- zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
usethis::use_data_raw(name = "zip_db")
usethis::use_data(zip_db, overwrite = TRUE)
zip_db
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
download_datasets(keyword = "medicine", zipcoder = FALSE)
gc()
devtools::build_rmd("README.Rmd")
fledge::bump_version()
fledge::finalize_version(push = TRUE)
search_datasets(specialty = "cardiac surgery")
devtools::load_all(".")
search_datasets(specialty = "cardiac surgery")
gc()
usethis::use_r("summary_stats")
summary_stats <- function(df,
condition = NULL,
group_vars = NULL,
summary_vars = NULL,
arr = NULL) {
df |>
tidytable::filter({{ condition }}) |>
tidytable::group_by(tidytable::pick({{ group_vars }})) |>
tidytable::summarise(tidytable::across({{ summary_vars }},
list(median = \(x) median(x, na.rm = TRUE),
mean = \(x) mean(x, na.rm = TRUE)),
.names = "{.fn}_{.col}"),
n = tidytable::n.()) |>
tidytable::arrange({{ arr }})
}
download_datasets(specialty = "vascular surgery") |>
summary_stats(patient == "new",
c(specialty, state, hcpcs, cost),
c(min, max, mode, range),
cost)
devtools::load_all(".")
devtools::load_all(".")
summary_stats <- function(df,
condition = NULL,
group_vars = NULL,
summary_vars = NULL,
arr = NULL) {
df |>
tidytable::filter({{ condition }}) |>
tidytable::group_by(tidytable::pick({{ group_vars }})) |>
tidytable::summarise(tidytable::across({{ summary_vars }},
list(median = \(x) median(x, na.rm = TRUE),
mean = \(x) mean(x, na.rm = TRUE)),
.names = "{.fn}_{.col}"),
n = tidytable::n.()) |>
tidytable::arrange({{ arr }})
}
download_datasets(specialty = "vascular surgery") |>
summary_stats(patient == "new",
c(specialty, state, hcpcs, cost),
c(min, max, mode, range),
cost)
summary_stats <- function(df,
condition = NULL,
group_vars = NULL,
summary_vars = NULL,
arr = NULL) {
df |>
tidytable::filter({{ condition }}) |>
#tidytable::group_by(tidytable::pick({{ group_vars }})) |>
tidytable::summarise(tidytable::across({{ summary_vars }},
list(median = \(x) median(x, na.rm = TRUE),
mean = \(x) mean(x, na.rm = TRUE)),
.names = "{.fn}_{.col}"),
n = tidytable::n.(),
.by = ({{ group_vars }}) ) |>
tidytable::arrange({{ arr }})
}
download_datasets(specialty = "vascular surgery") |>
summary_stats(patient == "new",
c(specialty, state, hcpcs, cost),
c(min, max, mode, range),
cost)
summary_stats <- function(df,
condition = NULL,
group_vars = NULL,
summary_vars = NULL,
arr = NULL) {
df |>
tidytable::filter({{ condition }}) |>
#tidytable::group_by(tidytable::pick({{ group_vars }})) |>
tidytable::summarise(tidytable::across({{ summary_vars }},
list(median = \(x) median(x, na.rm = TRUE),
mean = \(x) mean(x, na.rm = TRUE)),
.names = "{.fn}_{.col}"),
n = tidytable::n.(),
.by = ({{ group_vars }}) ) |>
tidytable::arrange(tidytable::desc({{ arr }}))
}
download_datasets(specialty = "vascular surgery") |>
summary_stats(patient == "new",
c(specialty, state, hcpcs, cost),
c(min, max, mode, range),
cost)
download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
install.packages("rpolars", repos = "https://rpolars.r-universe.dev")
devtools::load_all(".")
devtools::load_all(".")
search_datasets(specialty = "vascular surgery") |>
download_dataset() |>
head(n = 10)
devtools::load_all(".")
search_datasets(specialty = "vascular surgery") |>
download_dataset() |>
head(n = 10)
x <- search_datasets(specialty = "vascular surgery") |>
download_dataset()
devtools::load_all(".")
x <- search_datasets(specialty = "vascular surgery") |>
download_dataset()
lobstr::obj_size(x)
size <- lobstr::obj_size(x)
cli::cli_alert_info("Size: {prettyunits::pretty_bytes(size)}")
cli::cli_alert_info("Size: {size}")
size
cli::cli_alert_info("Size: {.size}")
cli::cli_alert_info("Size: {(.size)}")
cli::cli_alert_info("Size: {(size)}")
lobstr::obj_size(x)
size
prettyunits::pretty_bytes(size)
lobstr::obj_size(x) |> unclass()
size <- lobstr::obj_size(x) |> unclass()
prettyunits::pretty_bytes(size)
cli::cli_alert_info("Size: {prettyunits::pretty_bytes(size)}")
devtools::load_all(".")
x <- search_datasets(specialty = "vascular surgery") |>
x <- search_datasets(specialty = "vascular surgery") |>
download_dataset()
x <- search_datasets(specialty = "vascular surgery") |>
download_dataset()
download_datasets(keyword = "medicine")
download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
est_cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
est_cardio
est_cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
est_cardio
gc()
download_datasets(keyword = "medicine") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
gc()
download_datasets(keyword = "medicine") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
gc()
devtools::build_rmd("README.Rmd")
fledge::bump_version()
fledge::finalize_version(push = TRUE)
est_cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
devtools::load_all(".")
est_cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
est_cardio
p1 <- ggplot2::ggplot(est_cardio |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mean_mode, median), mean_mode)) +
ggplot2::geom_pointrange(ggplot2::aes(ymin = mean_min, ymax = mean_max),
size = 0, colour = "black", linewidth = 0.5) +
ggplot2::geom_point(color = "black", size = 3) +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(
x = "",
y = "Minimum, Mode, Maximum",
title = "",
subtitle = "Price Ranges by State") +
ggplot2::theme_minimal()
p2 <- ggplot2::ggplot(est_cardio |> tidytable::filter(cost == "copay"),
ggplot2::aes(forcats::fct_reorder(state, mean_mode, median), mean_mode)) +
ggplot2::geom_pointrange(ggplot2::aes(ymin = mean_min, ymax = mean_max),
size = 0, colour = "black", linewidth = 0.5) +
ggplot2::geom_point(color = "black", size = 3) +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(
x = "",
y = "Minimum, Mode, Maximum",
title = "",
subtitle = "Copay Ranges by State") +
ggplot2::theme_minimal()
library(patchwork)
(p1 + p2) +
plot_annotation(
title = "Cardiology: Established Patient Office Visit Costs",
caption = "Source: data.cms.gov/provider-data",
theme = ggplot2::theme(plot.title = ggplot2::element_text(size = 16))
)
library(statebins)
statebins(est_cardio |> tidytable::filter(cost == "copay"),
value_col = "mean_mode",
name = "Average Medicare Copays",
ggplot2_scale_function = viridis::scale_fill_viridis,
direction = 1,
round = FALSE) +
ggplot2::labs(title = "Established Patient Office Visit Costs: Cardiology") +
theme_statebins()
devtools::build_rmd("README.Rmd")
gc()
library(costoffice)
data("zipcode_db")
zipcode_db |>
tidytable::slice_head() |>
knitr::kable()
data("zip_db")
zip_db |>
tidytable::slice_head() |>
knitr::kable()
gc()
devtools::install_github("andrewallenbruce/costoffice", build_vignettes = TRUE)
devtools::load_all(".")
search_datasets(specialty = "vascular surgery") |>
download_dataset() |>
tidytable::slice_sample(n = 10) |>
use_zipcoder(full = TRUE)
download_datasets(specialty = "vascular surgery")
devtools::load_all(".")
download_datasets(specialty = "vascular surgery")
download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = cost == "copay",
group_vars = c(specialty, hcpcs, patient),
summary_vars = c(min, max, mode, range),
arr = cost)
download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = cost == "copay",
group_vars = c(specialty, hcpcs, patient),
summary_vars = c(min, max, mode, range),
arr = patient)
download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = cost == "copay",
group_vars = c(specialty, hcpcs, patient, state_region),
summary_vars = c(min, max, mode, range),
arr = patient)
gc()
download_datasets(keyword = "medicine") |>
summary_stats(condition = cost == "copay",
group_vars = c(specialty, hcpcs, patient),
summary_vars = c(min, max, mode, range),
arr = n)
devtools::load_all(".")
est_cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
est_cardio
library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
est_cardio
remotes::install_github("NickCH-K/vtable")
vtable::vt(est_cardio, lush = TRUE)
vasc <- download_datasets(specialty = "vascular surgery")
vtable::vt(vasc, lush = TRUE)
vtable::st(vasc)
vtable::st(vasc, add.median = TRUE)
vtable::st(vasc, add.median = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE, group.long = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
vasc
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot(alpha = 0.1, ggplot2::aes(group = cost)) +
ggplot2::coord_flip()
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot(alpha = 0.1, ggplot2::aes(group = cost))
vasc
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc, ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::labs(x = "", y = "")
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
vasc |> summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
gc()
install.packages("mdsr")
devtools::build_rmd("README.Rmd")
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", size = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21)
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", size = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::coord_flip()
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", linewidth = 4, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::coord_flip()
download_datasets(keyword = "medicine") |>
head()
download_datasets(specialty = "vascular surgery") |> head()
gc()
devtools::build_rmd("README.Rmd")
devtools::build_rmd("README.Rmd")
