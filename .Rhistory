results |>
tidyr::unnest(keyword)
results |>
tidyr::unnest(keyword) |>
dplyr::filter(keyword != "office visit cost")
results |>
tidyr::unnest(keyword) |>
dplyr::filter(keyword != "office visit cost") |>
dplyr::filter(keyword != "costs")
response |>
httr2::resp_body_json(check_type = FALSE, simplifyVector = TRUE) |>
tibble::tibble() |>
dplyr::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
dplyr::select(theme,
keyword,
#title,
issued,
modified,
released,
#identifier,
distribution,
#homepage = landingPage
) |>
tidyr::unnest(theme) |>
dplyr::filter(theme == "Physician office visit costs") |>
tidyr::unnest(keyword) |>
dplyr::filter(keyword != "office visit cost") |>
dplyr::filter(keyword != "costs") |>
tidyr::unnest(distribution, names_sep = ".") |>
dplyr::mutate(csv_url = distribution.downloadURL,
theme = NULL,
distribution.downloadURL = NULL,
distribution.title = NULL,
distribution.mediaType = NULL,
distribution.mediaType = NULL,
`distribution.@type` = NULL)
results <- response |>
httr2::resp_body_json(check_type = FALSE, simplifyVector = TRUE) |>
tibble::tibble() |>
dplyr::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
dplyr::select(theme,
keyword,
#title,
issued,
modified,
released,
#identifier,
distribution,
#homepage = landingPage
) |>
tidyr::unnest(theme) |>
dplyr::filter(theme == "Physician office visit costs") |>
tidyr::unnest(keyword) |>
dplyr::filter(keyword != "office visit cost") |>
dplyr::filter(keyword != "costs") |>
tidyr::unnest(distribution, names_sep = ".") |>
dplyr::mutate(csv_url = distribution.downloadURL,
theme = NULL,
distribution.downloadURL = NULL,
distribution.title = NULL,
distribution.mediaType = NULL,
distribution.mediaType = NULL,
`distribution.@type` = NULL)
results |>
dplyr::glimpse()
results
results <- response |>
httr2::resp_body_json(check_type = FALSE, simplifyVector = TRUE) |>
tibble::tibble() |>
dplyr::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
dplyr::select(theme,
specialty = keyword,
#title,
issued,
modified,
released,
#identifier,
distribution,
#homepage = landingPage
) |>
tidyr::unnest(theme) |>
dplyr::filter(theme == "Physician office visit costs") |>
tidyr::unnest(specialty) |>
dplyr::filter(specialty != "office visit cost") |>
dplyr::filter(specialty != "costs") |>
tidyr::unnest(distribution, names_sep = ".") |>
dplyr::mutate(csv_url = distribution.downloadURL,
theme = NULL,
distribution.downloadURL = NULL,
distribution.title = NULL,
distribution.mediaType = NULL,
distribution.mediaType = NULL,
`distribution.@type` = NULL)
results
usethis::use_r("search_datasets")
search_datasets()
devtools::load_all(".")
search_datasets()
search_datasets(specialty = "vascular surgery")
devtools::load_all(".")
usethis::use_agpl3_license()
usethis::use_agpl3_license()
gc()
usethis::use_agpl3_license()
devtools::build_rmd("README.Rmd")
devtools::build_rmd("README.Rmd")
usethis::use_agpl3_license()
usethis::use_pkgdown_github_pages()
devtools::load_all(".")
vasc <- search_datasets(specialty = "vascular surgery")
vasc
vasc$csv_url
vasc$csv_url |> readr::read_csv()
vasc$csv_url |> readr::read_csv() |> dplyr::count(zip_code, sort = TRUE)
vasc_set <- vasc$csv_url |> readr::read_csv()
vasc_set |> dplyr::glimpse()
vasc_set |> dplyr::slice_sample(n = 25)
zipcodeR::reverse_zipcode(73079)
zipcodeR::download_zip_data()
zipcodeR::reverse_zipcode("73079")
library(zipcodeR)
zipcodeR::reverse_zipcode("73079")
zipcodeR::zip_code_db
zipcodeR::zip_code_db |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state)
zipcodeR::reverse_zipcode("73079") |> tidyr::unnest(common_city_list)
zipcodeR::reverse_zipcode("73079")
zipcodeR::zip_code_db |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south
)
gc()
zipcodeR::zip_code_db |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south
) |>
dplyr::count(state, wt = zip_code, sort = TRUE)
zipcodeR::zip_code_db |>
dplyr::select(zip_code = zipcode,
city = major_city,
county,
state,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south
) |>
dplyr::count(state, sort = TRUE)
data.table::fread(vasc$csv_url)
141032/100
141032/1000
gc()
vasc_set |> dplyr::slice_sample(n = 25)
vasc_set |> dplyr::slice_sample(n = 25) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zipcode))
vasc_set |> dplyr::slice_sample(n = 25) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zipcode, zipcodeR::reverse_zipcode))
vasc_set |> dplyr::slice_sample(n = 25) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode))
vasc_set |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_procedure_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_procedure_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient
)
dt <- data.table::fread(vasc$csv_url)
dt
lobstr::obj_size(dt)
lobstr::obj_size(vasc_set)
lobstr::obj_size(dt)
search_datasets(specialty = "vascular surgery") |> dplyr::glimpse()
vasc <- search_datasets(specialty = "vascular surgery")
dt
dt |>
dplyr::slice_sample(n = 25)
dt |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_proc_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_proc_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient
)
dt |> dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_proc_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_proc_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient
) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode))
dt |> dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_proc_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_proc_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
dt <- dt |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_proc_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_proc_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
dt
dt |> dplyr::mutate(zip_code = purrr::map_int(.data$zip_code, zipcodeR::normalize_zip))
dt |> dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code, zipcodeR::normalize_zip))
dt |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code, zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode), .after = zip_code)
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code, zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode), .after = zip_code)
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code, zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode), .after = zip_code) |>
tidyr::unnest_wider(zip_info)
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(zipcode = NULL,
city = major_city,
county,
state,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::everything())
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(zipcode = NULL,
city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::everything())
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(zipcode = NULL,
city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::everything())
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(zipcode = NULL,
city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::contains("new"),
dplyr::contains("est")
)
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::contains("new"),
dplyr::contains("est")) |>
tidyr::nest(geo = c(lat, lng, dplyr::starts_with("bounds")))
dt <- dt |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
dt |>
dplyr::slice_sample(n = 25)
dt <- data.table::fread(vasc$csv_url)
lobstr::obj_size(dt)
dt <- dt |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
dt
dt |> tibble::tibble() |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code,
zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code,
zipcodeR::reverse_zipcode),
.after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::contains("new"),
dplyr::contains("est")) |>
tidyr::nest(geo = c(lat, lng, dplyr::starts_with("bounds")))
devtools::build_site()
usethis::use_github_links()
usethis::use_github_links(overwrite = TRUE)
usethis::use_github_action_check_standard()
usethis::use_code_of_conduct()
usethis::use_code_of_conduct(contact = "andrewbruce.himni@gmail.com")
usethis::use_package_doc()
usethis::use_lifecycle_badge("experimental")
install.packages(c("badger", "available"))
badger::badge_code_size()
badger::badge_repostatus("WIP")
badger::badge_license("AGPL-3.0", "https://github.com/andrewallenbruce/costoffice/blob/main/LICENSE.md")
badger::badge_last_commit()
badger::badge_codecov()
badger::badge_codefactor()
devtools::load_all(".")
devtools::load_all(".")
devtools::build_rmd("README.Rmd")
search_datasets()
search_datasets() |> knitr::kable()
search_datasets(specialty = "vascular surgery") |> dplyr::glimpse()
vasc <- search_datasets(specialty = "vascular surgery")
dt <- data.table::fread(vasc$csv_url)
lobstr::obj_size(dt)
dt <- dt |>
tibble::tibble() |>
dplyr::slice_sample(n = 25) |>
dplyr::select(zip_code,
new_top_code = most_utilized_procedure_code_for_new_patient,
new_price_min = min_medicare_pricing_for_new_patient,
new_price_max = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min = min_copay_for_new_patient,
new_copay_max = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_top_code = most_utilized_procedure_code_for_established_patient,
est_price_min = min_medicare_pricing_for_established_patient,
est_price_max = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min = min_copay_for_established_patient,
est_copay_max = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
dt
dt |>
dplyr::mutate(zip_code = purrr::map_chr(.data$zip_code, zipcodeR::normalize_zip)) |>
dplyr::mutate(zip_info = purrr::map_df(.data$zip_code, zipcodeR::reverse_zipcode), .after = zip_code) |>
tidyr::unnest_wider(zip_info) |>
dplyr::select(city = major_city,
county,
state,
zip_code,
lat,
lng,
bounds_west,
bounds_east,
bounds_north,
bounds_south,
dplyr::contains("new"),
dplyr::contains("est")) |>
tidyr::nest(geo = c(lat, lng, dplyr::starts_with("bounds")))
