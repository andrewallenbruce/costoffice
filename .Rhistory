library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
library(geofacet)
ggplot2::ggplot(est_cardio, ggplot2::aes(cost, mean_mode, fill = cost)) +
ggplot2::geom_col() +
ggplot2::coord_flip() +
facet_geo(~ state, grid = "us_state_grid2", label = "name")
est_cardio
remotes::install_github("NickCH-K/vtable")
vtable::vt(est_cardio, lush = TRUE)
vasc <- download_datasets(specialty = "vascular surgery")
vtable::vt(vasc, lush = TRUE)
vtable::st(vasc)
vtable::st(vasc, add.median = TRUE)
vtable::st(vasc, add.median = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE, group.long = TRUE)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
vasc
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot(alpha = 0.1, ggplot2::aes(group = cost)) +
ggplot2::coord_flip()
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot(alpha = 0.1, ggplot2::aes(group = cost))
vasc
ggplot2::ggplot(vasc, ggplot2::aes(state, mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc, ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip()
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::labs(x = "", y = "")
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mode, median), mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
vasc |> summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost)
vtable::st(vasc, group = 'state_region', group.test = TRUE)
gc()
install.packages("mdsr")
devtools::build_rmd("README.Rmd")
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", size = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21)
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", size = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::coord_flip()
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mode), y = mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = min, ymax = max), color = "#f3d478", linewidth = 4, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::coord_flip()
download_datasets(keyword = "medicine") |>
head()
download_datasets(specialty = "vascular surgery") |> head()
gc()
devtools::build_rmd("README.Rmd")
devtools::build_rmd("README.Rmd")
devtools::build_rmd("README.Rmd")
library(costoffice)
search_datasets()
search_datasets()
download_datasets(keyword = "anesthesiology") |> head()
(x <- download_datasets(specialty = "vascular surgery") |> head())
(y <- download_datasets(keyword = "anesthesiology") |> head())
(vasc <- download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost))
devtools::load_all(".")
(vasc <- download_datasets(specialty = "vascular surgery") |>
summary_stats(condition = patient == "new",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost))
(cardio <- download_datasets(specialty = "cardiology") |>
summary_stats(condition = patient == "est",
group_vars = c(specialty, state, hcpcs, cost),
summary_vars = c(min, max, mode, range),
arr = cost))
vasc
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mean_mode, median), mean_mode)) +
ggplot2::geom_boxplot() +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mean_mode), y = mean_mode)) +
ggplot2::labs(x = "", y = "") +
ggplot2::geom_linerange(ggplot2::aes(ymin = mean_min, ymax = mean_max),
color = "#f3d478", linewidth = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::coord_flip()
ggplot2::ggplot(vasc |> tidytable::filter(cost == "price"),
ggplot2::aes(forcats::fct_reorder(state, mean_mode, median), mean_mode)) +
ggplot2::geom_point() +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
ggplot2::ggplot(data = vasc, ggplot2::aes(x = reorder(state, mean_mode), y = mean_mode)) +
ggplot2::geom_linerange(ggplot2::aes(ymin = mean_min, ymax = mean_max),
color = "#f3d478", linewidth = 4.5, alpha = 0.8) +
ggplot2::geom_point(fill = "#ed3324", color = "white", size = 2, shape = 21) +
ggplot2::coord_flip() +
ggplot2::scale_y_continuous(labels = scales::label_dollar()) +
ggplot2::labs(x = "", y = "",
title = "Established Patient Office Visit Costs: Vascular Surgery")
devtools::build_rmd("README.Rmd")
devtools::build_site()
addinslist:::addinslistAddin()
remotes::install_github("yonicd/details")
search_datasets()$specialty |>
details::details(summary = 'Available Medical Specialties')
gc()
devtools::build_rmd("README.Rmd")
fledge::bump_version()
fledge::finalize_version(push = TRUE)
download_datasets(specialty = "cardiology")
gc()
download_datasets(specialty = "cardiology", full = TRUE)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk))
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::count(state, zip_code, wt = pop)
costoffice::zip_db
costoffice::zip_db |> tidytable::filter(zip_code = "99501")
costoffice::zip_db |> tidytable::filter(zip_code == "99501")
costoffice::zip_db |> tidytable::filter(zip_code == "99501") |>
tidytable::unnest(demo)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::n_distinct(zip_code)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::n_distinct(zip_code)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::n_distinct("zip_code", na.rm = TRUE)
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::group_by(state, zip_code) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop))
download_datasets(specialty = "cardiology", full = TRUE) |>
tidytable::select(!c(geo, is_zcta, zcta_crosswalk)) |>
tidytable::unnest(demo) |>
tidytable::group_by(state, zip_code) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE))
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density),
med_income = stats::median(med_income))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density),
med_income = stats::median(med_income))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density, na.rm = TRUE),
med_income = stats::median(med_income, na.rm = TRUE))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state)
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density, na.rm = TRUE),
med_income = stats::median(med_income, na.rm = TRUE))
costoffice::zip_db |>
tidytable::unnest(demo)
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density, na.rm = TRUE))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(n = tidytable::n.(),
pop = sum(pop, na.rm = TRUE),
pop_density = mean(pop_density, na.rm = TRUE),
med_income = median(med_income, na.rm = TRUE))
costoffice::zip_db |>
tidytable::unnest(demo) |>
tidytable::group_by(state) |>
tidytable::summarise(no_zips = tidytable::n.(),
pop_sum = sum(pop, na.rm = TRUE),
mean_pop_dens = mean(pop_density, na.rm = TRUE),
med_income = median(med_income, na.rm = TRUE))
gc()
devtools::build_rmd("README.Rmd")
devtools::load_all(".")
x <- download_datasets(specialty = "vascular surgery")
library(rpolars)
write.csv(x,my_file)
my_file <- tempfile()
write.csv(x,my_file)
lazy_frame <- rpolars:::lazy_csv_reader(path=my_file)
lazy_frame$collect()
unlink(my_file)
gc()
devtools::load_all(".")
cardio <- download_datasets(specialty = "cardiology") |> head(n = 10)
cardio
cardio <- search_datasets(specialty = "cardiology")
cardio
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename)
names_helper <- function(x) {
x |>
stringr::str_replace_all(x, "_", " ") |>
stringr::str_to_lower(x)
}
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename, names_helper)
cardio |>
tidytable::select(csv_url) |>
tibble::deframe()
card  <- cardio |>
tidytable::select(csv_url) |>
tibble::deframe()
card
card  <- cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename)
card
names_helper <- function(x) {
stringr::str_replace_all(x, "_", " ") |>
stringr::str_to_lower(x)
}
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename, names_helper)
names_helper <- function(x) {
stringr::str_replace_all(x, "_", " ")
stringr::str_to_lower(x)
}
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename, names_helper)
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename, tolower)
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename)
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename) |>
names_helper()
cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(dirname)
card  <- cardio |>
tidytable::select(csv_url) |>
tibble::deframe() |>
rlang::set_names(basename)
names(card)
gc()
download_datasets <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
results <- search_datasets(specialty = specialty,
keyword   = keyword) |>
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
purrr::map(download_dataset) |>
purrr::list_rbind() |>
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
download_datasets <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
results <- search_datasets(specialty = specialty,
keyword   = keyword) |>
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
purrr::map(download_dataset) |>
purrr::list_rbind()
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
.datatable.aware <- TRUE
download_datasets(specialty = "vascular surgery")
search_datasets(specialty = "vascular surgery") |>
download_dataset()
devtools::load_all(".")
search_datasets(specialty = "vascular surgery") |>
download_dataset()
download_datasets(specialty = "vascular surgery")
devtools::load_all(".")
search_datasets(specialty = "vascular surgery") |>
download_dataset()
download_datasets(specialty = "vascular surgery")
download_datasets <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
results <- search_datasets(specialty = specialty,
keyword   = keyword) |>
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
purrr::map(download_dataset) |>
purrr::list_rbind()
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
download_datasets(specialty = "vascular surgery")
devtools::load_all(".")
download_datasets_new <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
data <- search_datasets(specialty = specialty,
keyword   = keyword)
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
results <- purrr::pmap(list(df = data,
urlcol = csv_url,
sp_col = specialty),
download_dataset) |>
purrr::list_rbind()
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
search_datasets(specialty = "vascular surgery") |>
download_dataset()
search_datasets(specialty = "vascular surgery") |>
download_dataset(csv_url, specialty)
search_datasets(specialty = "vascular surgery") |>
download_dataset(.data, csv_url, specialty)
devtools::load_all(".")
download_datasets_new <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
data <- search_datasets(specialty = specialty,
keyword   = keyword)
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
results <- purrr::pmap(list(df = data,
urlcol = csv_url,
sp_col = specialty),
download_dataset) |>
purrr::list_rbind()
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
search_datasets(specialty = "vascular surgery") |>
download_dataset(.data, urlcol = csv_url, spcol = specialty)
download_datasets_new(specialty = "vascular surgery")
download_datasets_new <- function(specialty = NULL,
keyword   = NULL,
zipcoder  = TRUE,
drop_na   = TRUE,
full      = FALSE) {
data <- search_datasets(specialty = specialty,
keyword   = keyword)
# tidytable::select(csv_url) |>
# tibble::deframe() |>
# rlang::set_names(basename) |>
results <- purrr::pmap(list(df = data,
urlcol = "csv_url",
sp_col = "specialty"),
download_dataset) |>
purrr::list_rbind()
# tidytable::separate_wider_delim(filename,
#                                 delim = ".",
#                                 names = c("specialty", "ext")) |>
# tidytable::mutate(ext = NULL,
#                   specialty = stringr::str_replace_all(specialty, "_", " "),
#                   specialty = stringr::str_to_lower(specialty)) |>
# tidytable::relocate(specialty)
if (isTRUE(zipcoder)) {
results <- results |> use_zipcoder(drop_na = drop_na, full = full)
}
df_size(results)
return(results)
}
download_datasets_new(specialty = "vascular surgery")
