newfile <- gsub("(.csv)", "", basename(file))
fst::write_fst(csv, paste0(out, newfile))
}
files[1:5]
names[1:5]
purrr::walk2(files[1:5], names[1:5], label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
fst::read_fst("C:/Users/andyb/Desktop/costoffice/test/label/Anesthesiology") |> dplyr::tibble()
gc()
label <- function(file, name, out) {
csv <- tidytable::fread(input = file,
nThread = 4,
keepLeadingZeros = TRUE,
colClasses = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"))
csv <- tidytable::select(csv,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
csv$specialty <- name
new <- tidytable::select(csv, zip_code, hcpcs = new_code,
tidytable::starts_with("new")) |>
tidytable::pivot_longer(tidytable::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
est <- tidytable::select(csv, zip_code, hcpcs = est_code,
tidytable::starts_with("est")) |>
tidytable::pivot_longer(tidytable::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
csv <- tidytable::bind_rows(new, est) |>
tidytable::left_join(costoffice::zip_db, by = c("zip_code")) |>
tidytable::mutate(county = tidytable::na_if(county, ""), range = max - min) |>
tidytable::select(zip_code, city, county, state, region, division,
tidytable::everything())
newfile <- gsub("(.csv)", "", basename(file))
fst::write_fst(csv, paste0(out, newfile))
}
gc()
purrr::walk2(files[1:5], names[1:5], label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
fst::read_fst("C:/Users/andyb/Desktop/costoffice/test/label/Anesthesiology") |> dplyr::tibble()
csvs[1]
qs::qread_url(csvs[1])
qs::qread(csvs[1])
qs::qserialize(csvs[1])
qs::qread_url(qs::qserialize(csvs[1]))
gc()
label <- function(file, name, out) {
csv <- tidytable::fread(input = file,
nThread = 4,
keepLeadingZeros = TRUE,
colClasses = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"))
csv <- tidytable::select(csv,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
csv$specialty <- name
new <- tidytable::select(csv, zip_code, hcpcs = new_code,
tidytable::starts_with("new")) |>
tidytable::pivot_longer(tidytable::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
est <- tidytable::select(csv, zip_code, hcpcs = est_code,
tidytable::starts_with("est")) |>
tidytable::pivot_longer(tidytable::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
csv <- tidytable::bind_rows(new, est) |>
tidytable::left_join(costoffice::zip_db, by = c("zip_code")) |>
tidytable::mutate(county = tidytable::na_if(county, ""), range = max - min) |>
tidytable::select(zip_code, city, county, state, region, division,
tidytable::everything())
newfile <- gsub("(.csv)", "", basename(file))
#fst::write_fst(csv, paste0(out, newfile))
qs::qsave(csv, paste0(out, newfile))
}
purrr::walk2(files[1:5], names[1:5], label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
qs::qread("C:/Users/andyb/Desktop/costoffice/test/label/Anesthesiology") |> dplyr::tibble()
gc()
purrr::walk2(files, names, label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
gc()
qs::catquo("saving file")
label <- function(file, name, out) {
csv <- tidytable::fread(input = file,
nThread = 4,
keepLeadingZeros = TRUE,
colClasses = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"))
csv <- tidytable::select(csv,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
csv$specialty <- name
new <- tidytable::select(csv, zip_code, hcpcs = new_code,
tidytable::starts_with("new")) |>
tidytable::pivot_longer(tidytable::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
est <- tidytable::select(csv, zip_code, hcpcs = est_code,
tidytable::starts_with("est")) |>
tidytable::pivot_longer(tidytable::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
csv <- tidytable::bind_rows(new, est) |>
tidytable::left_join(costoffice::zip_db, by = c("zip_code")) |>
tidytable::mutate(county = tidytable::na_if(county, ""), range = max - min) |>
tidytable::select(zip_code, city, county, state, region, division,
tidytable::everything())
newfile <- gsub("(.csv)", "", basename(file))
#fst::write_fst(csv, paste0(out, newfile))
#qs::qsave(csv, paste0(out, newfile))
readr::write_csv(csv, paste0(out, newfile, ".gz"))
}
purrr::walk2(files, names, label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
files <- paste0("C:/Users/andyb/Desktop/costoffice/",
list.files("test/csv", full.names = T)) |>
purrr::set_names(basename)
names <- names(files)
names <- gsub("(.csv)", "", names)
names <- gsub("(_)", " ", names)
names(files) <- NULL
label <- function(file, name, out) {
csv <- tidytable::fread(input = file,
nThread = 4,
keepLeadingZeros = TRUE,
colClasses = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"))
csv <- tidytable::select(csv,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
csv$specialty <- name
new <- tidytable::select(csv, zip_code, hcpcs = new_code,
tidytable::starts_with("new")) |>
tidytable::pivot_longer(tidytable::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
est <- tidytable::select(csv, zip_code, hcpcs = est_code,
tidytable::starts_with("est")) |>
tidytable::pivot_longer(tidytable::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
csv <- tidytable::bind_rows(new, est) |>
tidytable::left_join(costoffice::zip_db, by = c("zip_code")) |>
tidytable::mutate(county = tidytable::na_if(county, ""), range = max - min) |>
tidytable::select(zip_code, city, county, state, region, division,
tidytable::everything())
newfile <- gsub("(.csv)", "", basename(file))
#fst::write_fst(csv, paste0(out, newfile))
#qs::qsave(csv, paste0(out, newfile))
readr::write_csv(csv, paste0(out, newfile, ".gz"))
}
label <- function(file, name, out) {
csv <- tidytable::fread(input = file,
nThread = 4,
keepLeadingZeros = TRUE,
colClasses = c(
zip_code = "character",
most_utilized_procedure_code_for_new_patient = "character",
most_utilized_procedure_code_for_established_patient = "character"))
csv <- tidytable::select(csv,
zip_code,
new_code       = most_utilized_procedure_code_for_new_patient,
new_price_min  = min_medicare_pricing_for_new_patient,
new_price_max  = max_medicare_pricing_for_new_patient,
new_price_mode = mode_medicare_pricing_for_new_patient,
new_copay_min  = min_copay_for_new_patient,
new_copay_max  = max_copay_for_new_patient,
new_copay_mode = mode_copay_for_new_patient,
est_code       = most_utilized_procedure_code_for_established_patient,
est_price_min  = min_medicare_pricing_for_established_patient,
est_price_max  = max_medicare_pricing_for_established_patient,
est_price_mode = mode_medicare_pricing_for_established_patient,
est_copay_min  = min_copay_for_established_patient,
est_copay_max  = max_copay_for_established_patient,
est_copay_mode = mode_copay_for_established_patient)
csv$specialty <- name
new <- tidytable::select(csv, zip_code, hcpcs = new_code,
tidytable::starts_with("new")) |>
tidytable::pivot_longer(tidytable::starts_with("new_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
est <- tidytable::select(csv, zip_code, hcpcs = est_code,
tidytable::starts_with("est")) |>
tidytable::pivot_longer(tidytable::starts_with("est_"),
names_to = c("patient", "cost", "stat"),
values_to = "amount", names_sep = "_") |>
tidytable::pivot_wider(names_from = stat, values_from = amount)
csv <- tidytable::bind_rows(new, est) |>
tidytable::left_join(costoffice::zip_db, by = c("zip_code")) |>
tidytable::mutate(county = tidytable::na_if(county, ""), range = max - min) |>
tidytable::select(zip_code, city, county, state, region, division,
tidytable::everything())
newfile <- gsub("(.csv)", "", basename(file))
#fst::write_fst(csv, paste0(out, newfile))
#qs::qsave(csv, paste0(out, newfile))
readr::write_csv(csv, paste0(out, newfile, "csv.gz"))
}
purrr::walk2(files, names, label,
out = "C:/Users/andyb/Desktop/costoffice/test/label/")
rlang::last_trace()
.datatable.aware <- TRUE
devtools::load_all(".")
devtools::load_all(".")
co_arrow <- arrow::open_dataset("C:/Users/andyb/Desktop/costoffice/test/label", format = "csv")
co_arrow
co_arrow$region
readr::readr_threads()
gc()
devtools::load_all(".")
devtools::load_all(".")
dentist <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label/Dentist.csv")
dentist
gc()
co_arrow <- arrow::open_dataset("C:/Users/andyb/Desktop/costoffice/test/label",
format = "csv",
col_types = "cccccccddddc",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range, specialty"))
co_arrow <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label",
format = "csv",
col_types = "cccccccddddc",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range,
specialty"))
gc()
co_arrow <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label",
col_types = "cccccccddddc",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range,
specialty"))
co_arrow <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range,
specialty"),
col_types = "cccccccddddc")
co_arrow <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range,
specialty"),
col_types = "cccccccddddc",
skip = 1)
co_arrow <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label",
col_names = c("zip_code,
city,
county,
state,
region,
division,
hcpcs,
patient,
cost,
min,
max,
mode,
range,
specialty"),
col_types = "cccccccddddc",
skip = 1)
co_arrow <- arrow::read_csv_arrow(
"C:/Users/andyb/Desktop/costoffice/test/label",
col_types = arrow::schema(
zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
co_arrow <- arrow::read_csv_arrow(
"C:/Users/andyb/Desktop/costoffice/test/label/",
col_types = arrow::schema(
zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
dentist <- arrow::read_csv_arrow("C:/Users/andyb/Desktop/costoffice/test/label/Dentist.csv")
co_arrow <- arrow::open_csv_dataset(
"C:/Users/andyb/Desktop/costoffice/test/label/",
col_types = arrow::schema(zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
co_arrow
dim(co_arrow)
co_arrow |> dplyr::group_by(cost, patient)
co_arrow |>
dplyr::group_by(cost, patient) |>
arrow::write_parquet("C:/Users/andyb/Desktop/costoffice/test/arrow/")
gc()
14451960 * 14
co_arrow <- arrow::open_csv_dataset(
"C:/Users/andyb/Desktop/costoffice/test/label/",
col_types = arrow::schema(zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
co_arrow |>
#dplyr::group_by(cost, patient) |>
arrow::write_parquet("C:/Users/andyb/Desktop/costoffice/test/arrow/")
gc()
co_arrow |> arrow::write_dataset(co_arrow, "C:/Users/andyb/Desktop/costoffice/test/arrow", format = "csv")
co_arrow <- arrow::open_csv_dataset(
"C:/Users/andyb/Desktop/costoffice/test/label/",
col_types = arrow::schema(zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
co_arrow |> arrow::write_dataset(co_arrow, "C:/Users/andyb/Desktop/costoffice/test/arrow", format = "csv")
arrow::write_dataset(co_arrow, "C:/Users/andyb/Desktop/costoffice/test/arrow", format = "csv")
co_arrow <- arrow::open_csv_dataset(
"C:/Users/andyb/Desktop/costoffice/test/label/",
col_types = arrow::schema(zip_code = arrow::utf8(),
city = arrow::utf8(),
county = arrow::utf8(),
state = arrow::utf8(),
region = arrow::utf8(),
division = arrow::utf8(),
hcpcs = arrow::utf8(),
patient = arrow::utf8(),
cost = arrow::utf8(),
min = arrow::float64(),
max = arrow::float64(),
mode = arrow::float64(),
range = arrow::float64(),
specialty = arrow::utf8()))
arrow::write_dataset(co_arrow,
"C:/Users/andyb/Desktop/costoffice/test/arrow",
format = "feather")
res <- httr2::request("https://transparency-in-coverage.uhc.com/api/v1/uhc/blobs/") |>
httr2::req_perform() |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE)
res
res$blobs |>
tibble::tibble()
res$blobs |>
tibble::tibble() |>
dplyr::slice_tail(n = 50)
devtools::load_all(".")
