dplyr::select(filename) |> as.vector()
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::select(filename) |> as.vector() |> as.character()
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::select(filename) |> as.vector()
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble()
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = prettyunits::pretty_bytes(compressed_size))
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = as.character(prettyunits::pretty_bytes(compressed_size)))
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = prettyunits::pretty_bytes(compressed_size, style = "nopad"))
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = prettyunits::pretty_bytes(compressed_size, style = "6"))
zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = prettyunits::pretty_bytes(compressed_size, style = "nopad"),
uncompressed_size = prettyunits::pretty_bytes(uncompressed_size, style = "nopad"),
)
files_nppes <- zip::zip_list("C:/Users/andyb/Desktop/costoffice/zip/nppes.zip") |>
tibble::tibble() |>
dplyr::mutate(compressed_size = prettyunits::pretty_bytes(compressed_size, style = "nopad"),
uncompressed_size = prettyunits::pretty_bytes(uncompressed_size, style = "nopad"))
files_nppes
files_nppes$filename[[2]]
zip::unzip(files_nppes$filename[[2]])
arrow::read_csv_arrow(files_nppes$filename[[2]])
paste0("zip/", files_nppes$filename[[2]])
arrow::read_csv_arrow(paste0("zip/", files_nppes$filename[[2]]))
arrow::read_csv_arrow(paste0("zip/nppes.zip/", files_nppes$filename[[2]]))
zip::unzip(paste0("zip/nppes.zip/", files_nppes$filename[[2]]))
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[2]])
files_nppes$filename[[3]]
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[3]])
files_nppes$filename[[4]]
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[4]])
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[5]])
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[6]])
files_nppes$filename[[7]]
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[7]])
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[8]])
files_nppes$filename[[9]]
files_nppes$filename[[10]]
# npidata_pfile_20050523-20230312_fileheader.csv
# othername_pfile_20050523-20230312.csv
zip::unzip(zipfile = "zip/nppes.zip", files = files_nppes$filename[[1]])
names <- html |>
rvest::html_elements("li") |>
rvest::html_text2()
links <- html |>
rvest::html_elements("a") |>
rvest::html_attr("href")
files_nppes
arrow::read_csv_arrow("npidata_pfile_20050523-20230312.csv")
gc()
gc()
prefix <- "https://download.cms.gov/nppes"
df <- tibble::tribble(
~name,    ~link,
names[4], links[5],
names[5], links[6],
names[6], links[7],
names[7], links[8]) |>
dplyr::mutate(link = stringr::str_replace(link, ".", prefix)) |>
tidyr::separate_wider_delim(name, delim = " - ",
names = c("names", "desc", "date_format"),
too_few = "align_start", too_many = "merge") |>
tidyr::unite("description", names:desc, remove = TRUE, sep = " ")
df
df
gc()
arrow::open_dataset("npidata_pfile_20050523-20230312.csv")
arrow::open_dataset("npidata_pfile_20050523-20230312.csv", format = "csv")
remotes::install_github("hafen/geofacet")
url <- "https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items"
request <- httr2::request(url)
response <- request |> httr2::req_perform()
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
tidytable::select(theme,
specialty = keyword,
issued,
modified,
released,
distribution) |>
tidytable::unnest(theme, .drop = FALSE)
results
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released))
results
results |> tidytable::unnest(theme, .drop = FALSE) |>
tidytable::filter(theme == "Physician office visit costs")
results |> tidytable::unnest(theme, .drop = FALSE) |> tidytable::filter(theme == "Physician office visit costs")
results |> tidytable::unnest(theme, .drop = FALSE)
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
tidytable::select(theme,
specialty = keyword,
issued,
modified,
released,
description,
distribution) |>
tidytable::unnest(theme, .drop = FALSE) |>
tidytable::filter(theme == "Physician office visit costs") |>
tidytable::unnest(specialty, .drop = FALSE) |>
tidytable::filter(specialty != "office visit cost") |>
tidytable::filter(specialty != "costs") |>
tidytable::unnest(distribution, names_sep = ".", .drop = FALSE) |>
tidytable::mutate(csv_url = distribution.downloadURL,
theme = NULL,
distribution.downloadURL = NULL,
distribution.title = NULL,
distribution.mediaType = NULL,
`distribution.@type` = NULL) |>
tidytable::relocate(specialty)
results
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released))
results |> dplyr::glimpse()
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
tidytable::select(theme,
title,
specialty = keyword,
issued,
modified,
released,
distribution) |>
tidytable::unnest(theme, .drop = FALSE) |>
tidytable::filter(theme == "Physician office visit costs") |>
tidytable::unnest(specialty, .drop = FALSE) |>
tidytable::filter(specialty != "office visit cost") |>
tidytable::filter(specialty != "costs") |>
tidytable::unnest(distribution, names_sep = ".", .drop = FALSE) |>
tidytable::mutate(csv_url = distribution.downloadURL,
theme = NULL,
distribution.downloadURL = NULL,
distribution.title = NULL,
distribution.mediaType = NULL,
`distribution.@type` = NULL) |>
tidytable::relocate(specialty)
results
results <- response |>
httr2::resp_body_json(check_type = FALSE,
simplifyVector = TRUE) |>
tidytable::as_tidytable() |>
tidytable::mutate(issued = clock::date_parse(issued),
modified = clock::date_parse(modified),
released = clock::date_parse(released)) |>
tidytable::select(theme,
title,
specialty = keyword,
issued,
modified,
released,
distribution) |>
tidytable::unnest(theme, .drop = FALSE) |>
#tidytable::filter(theme == "Physician office visit costs") |>
#tidytable::unnest(specialty, .drop = FALSE) |>
#tidytable::filter(specialty != "office visit cost") |>
#tidytable::filter(specialty != "costs") |>
# tidytable::unnest(distribution, names_sep = ".", .drop = FALSE) |>
# tidytable::mutate(csv_url = distribution.downloadURL,
#                   theme = NULL,
#                   distribution.downloadURL = NULL,
#                   distribution.title = NULL,
#                   distribution.mediaType = NULL,
#                   `distribution.@type` = NULL) |>
tidytable::relocate(specialty)
results
results |> dplyr::group_split(theme)
devtools::load_all(".")
search_datasets()
search_datasets(specialty = "cardiac surgery")
devtools::load_all(".")
gc()
search_datasets(keyword = "medicine")
search_datasets()
search_datasets(specialty = "vascular surgery") |>
download_dataset() |>
head()
search_datasets()
search_datasets(keyword = "medicine | certified")
search_datasets(keyword = "medicine || certified")
search_datasets(keyword = c("medicine", "certified"))
search_datasets(keyword = "medicine, certified")
search_datasets(keyword = c("medicine", "certified"))
search_datasets(keyword = c("medicine", "certified"))
c("medicine", "certified")
devtools::load_all(".")
search_datasets(keyword = c("medicine", "certified"))
devtools::load_all(".")
search_datasets(keyword = c("medicine", "certified"))
devtools::load_all(".")
search_datasets(keyword = c("medicine", "certified"))
search_datasets(keyword = "medicine | certified")
search_datasets(keyword = "medicine|certified")/
search_datasets(keyword = "medicine|certified")
devtools::load_all(".")
search_datasets(keyword = c("medicine", "certified"))
search_datasets(keyword = "medicine|certified")
search_datasets(keyword = "medicine, certified")
search_datasets(keyword = "m")
devtools::load_all(".")
search_datasets(keyword = "m")
gc()
devtools::load_all(".")
devtools::load_all(".")
download_datasets(keyword = "medicine")
library(costoffice)
zipcodeR::reverse_zipcode("93501")
zipcodeR::zip_code_db
zipcodeR::zip_code_db |> tidyr::unnest(area_code_list)
zipcodeR::zip_code_db |> tidyr::unnest(rawToChar(area_code_list))
zipcodeR::zip_code_db |> tidyr::unnest(area_code_list)
zipcodeR::zip_code_db |> tidyr::unnest(area_code_list) |> dplyr::mutate(area_code_list = rawToChar(area_code_list))
zipcodeR::zip_code_db
zipcodeR::zcta_crosswalk
zipcodeR::zcta_crosswalk |> dplyr::filter(ZCTA5 == "35004")
gc()
zipcodeR::zip_code_db |> dplyr::mutate(is_zcta == zipcodeR::is_zcta(zip_code))
zip_code_db
costoffice::zip_code_db
data(zip_code_db)
costoffice::zipcode_db |> dplyr::mutate(is_zcta == zipcodeR::is_zcta(zip_code))
costoffice::zipcode_db |> dplyr::mutate(is_zcta = zipcodeR::is_zcta(zip_code))
data("zcta_crosswalk")
data("zcta_crosswalk", package = "zipcodeR")
costoffice::zipcode_db |> dplyr::mutate(is_zcta = zipcodeR::is_zcta(zip_code))
costoffice::zipcode_db |>
dplyr::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
dplyr::count(is_zcta, sort = TRUE)
data("zip_code_db", package = "zipcodeR")
data("zip_code_db", package = "zipcodeR")
gc()
costoffice::zipcode_db
zip_code_db
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::left_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::left_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"), .keep = TRUE)
zipcodeR::zcta_crosswalk
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code))
gc()
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::left_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demo = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income),
geocode = c(lat, lng, tidytable::starts_with("bounds"))) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, tidytable::starts_with("bounds"))) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
#tidytable::nest(geocode = c(lat, lng, bounds_west, bounds_east, bounds_north, bounds_south)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds"))
zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
gc()
zip_db <- zip_code_db |>
tidytable::select(zip_code = zipcode,
city = major_city,
county,
state,
pop = population,
pop_density = population_density,
med_income = median_household_income,
lat,
lng,
tidytable::starts_with("bounds")) |>
tidytable::nest(demographics = c(pop, pop_density, med_income)) |>
tidytable::mutate(is_zcta = zipcodeR::is_zcta(zip_code)) |>
tidytable::nest_join(zcta_crosswalk, by = c("zip_code" = "ZCTA5"))
usethis::use_data_raw(name = "zip_db")
usethis::use_data(zip_db, overwrite = TRUE)
zip_db
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
devtools::load_all(".")
download_datasets(keyword = "medicine")
download_datasets(keyword = "medicine", zipcoder = FALSE)
gc()
devtools::build_rmd("README.Rmd")
fledge::bump_version()
fledge::finalize_version(push = TRUE)
